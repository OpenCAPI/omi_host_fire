#!/usr/bin/env bash

set -eu

usage() {
    echo "Need to provide design and script to pass to vivado"
    echo $0 "<fire> <script_name> <script_args>"
    exit 1
}

if [[ $# -lt 2 ]] ; then
    usage
fi

# By default we're using 2018.3. Some chips might be stuck on an older
# version, so override if needed.
XILINX_VERSION=2018.3

CWD=$(dirname $(readlink -f $0))
if [[ "$1" == "fire" ]] ; then
    # Alpha Data cards: xcvu3p-ffvc1517-2-i
    # Apollo Board: xcvu7p-flvc2104-2-e
    export XILINX_PART="xcvu7p-flvc2104-2-e"
    export TOP_LEVEL="fire_top"
    export SRC_DIR="$CWD/.."
    export DLX_DIR="$CWD/../dlx"
    export OUTPUT_PREFIX="$CWD/fire"
    export DESIGN="fire"
else
    echo "First argument must be 'fire'; was '$1'"
    exit 1
fi

## Insert license server/paths here
if [[ -r $2 ]] ; then
    export XILINXD_LICENSE_FILE=insert_license_file_server_here
    if ! which vivado 2>/dev/null >/dev/null; then
        export PATH=$PATH:insert_path_file_here/xilinx/2018.3.1/Vivado/2018.3/bin
    fi
    if ! vivado -nolog -nojournal -version | grep -q "Vivado v2018.3.1 (64-bit)"; then
        echo "Invalid Vivado version; ${XILINX_VERSION} is required"
        exit
    fi

    # Output to a log names after the script name and the script args,
    # with spaces replaced by '_', to tell all the logs apart. If
    # there are no args, delete the last _ so we don't end up with
    # synthesize_.log
    LOGNAME=$(echo "${2%.*} ${@:3}.log" | sed 's/ /_/g' | sed 's/_\.log/.log/g')
    mkdir -p $OUTPUT_PREFIX

    # Color code the different warning levels, and the commented
    # commands, as we print to the screen
    vivado -mode batch -source $2 -nolog -nojournal -tclargs ${@:3} 2>&1 | \
        sed -ue 's/^WARNING.*$/\x1b[33m&\x1b[m/g' | \
        sed -ue 's/^INFO.*$/\x1b[34m&\x1b[m/g' | \
        sed -ue 's/^CRITICAL WARNING.*$/\x1b[45m&\x1b[m/g' | \
        sed -ue 's/^#.*$/\x1b[32m&\x1b[m/g' | \
        sed -ue 's/^ERROR.*$/\x1b[41m&\x1b[m/g' | tee $OUTPUT_PREFIX/$LOGNAME

    # Strip color codes out of the log for reading with an editor
    sed -i -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g" $OUTPUT_PREFIX/$LOGNAME
else
    echo "Cannot find '$2'"
    exit 1
fi
